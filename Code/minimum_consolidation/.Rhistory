# Stramenopiles.Diatomea.all and temp
geom_raster(data = filter(Enviromental_data_melt, Enviromental == "Temperature...C."), aes(x = Date, y = Enviromental, fill = Value)) +
scale_fill_gradient2(low = "white", mid = "orangered2", high = "darkslategrey", midpoint = 0.5, name = "Temperature...C.") +
new_scale_fill()
ggarrange(Group_2_time_course, Group_2_time_heatmap, heights = c(2, 0.5), ncol = 1, nrow = 2, align = "hv", hjust = 10)
Group_3_time_course<- ggplot(Group_3_metagenome_taxa_percentage_time_course_log, aes(x=Date, y=Percent_of_Population, group=Taxa, color=Taxa)) +
geom_line(size=1.4) +
ggtitle("Group_3_metagenome_taxa_percentage_time_course_log") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.x=element_blank())
Group_3_time_heatmap<-ggplot() +
# Picozoa.Picomonadida and temp
geom_raster(data = filter(Enviromental_data_melt, Enviromental == "Temperature...C."), aes(x = Date, y = Enviromental, fill = Value)) +
scale_fill_gradient2(low = "white", mid = "orangered2", high = "darkslategrey", midpoint = 0.5, name = "Temperature...C.") +
new_scale_fill()+
# Picozoa.Picomonadida and Conductivity..S.m.
geom_raster(data = filter(Enviromental_data_melt, Enviromental == "Conductivity..S.m."), aes(x = Date, y = Enviromental, fill = Value)) +
scale_fill_gradient2(low = "white", mid = "yellow2", high = "darkslategrey", midpoint = 2.8, name = "Conductivity..S.m.") +
new_scale_fill()
ggarrange(Group_3_time_course, Group_3_time_heatmap, heights = c(2, 0.5), ncol = 1, nrow = 2, align = "hv", hjust = 10)+
theme(plot.margin = margin(0,0,50,0, "pt"))
Group_4_time_course<- ggplot(Group_4_metagenome_taxa_percentage_time_course_log, aes(x=Date, y=Percent_of_Population, group=Taxa, color=Taxa)) +
geom_line(size=1.4) +
ggtitle("Group_4_metagenome_taxa_percentage_time_course_log") +
theme(axis.text.x=element_blank(),
axis.ticks.x=element_blank(),
axis.title.x=element_blank())
Group_4_time_heatmap<-ggplot() +
# Rhizaria.Cercozoa and primary production
geom_raster(data = filter(Enviromental_data_melt, Enviromental == "Primary.Prod...mg.m³.day."), aes(x = Date, y = Enviromental, fill = Value)) +
scale_fill_gradient2(low = "white", mid = "coral2", high = "darkslategrey", midpoint = 450, name = "Primary.Prod...mg.m³.day.") +
new_scale_fill()
ggarrange(Group_4_time_course, Group_4_time_heatmap, heights = c(2, 0.5), ncol = 1, nrow = 2, align = "hv", hjust = 10)
knitr::opts_chunk$set(echo = TRUE)
library(xlsx)
library(ggplot2)
library(ggfortify)
library(tidyverse)
library(dplyr)
library(GGally)
library(corrgram)
library(janitor)
library(reshape2)
library(vegan)
library(ggvegan)
source("..//..//Functions//My_Functions.R")
source("..//..//Functions//maximum_consolidation_functions//data_for_pca_formating_updatedSept2022_no_percentage_maximum_consolidation.R")
source("..//..//Functions//maximum_consolidation_functions//metagenome_taxa_removed_updatedSept2022_no_percentage_maximum_consolidation.R")
source("..//..//Functions//maximum_consolidation_functions//Taxa_DF_updatedSept2022_no_percentage_maximum_consolidation.R")
data_for_pca<-data_for_pca()
Temperature...C. <-data_for_pca[1]
Conductivity..S.m.<-data_for_pca[2]
Pressure..dbar.<-data_for_pca[3]
Fluorescence..mg.m.<-data_for_pca[4]
Salinity<-data_for_pca[5]
Depth..m.<-data_for_pca[6]
Density..kg.m.<-data_for_pca[7]
Chlorophyll..mg.m.<-data_for_pca[8]
Phaeopigment..mg.m.<-data_for_pca[9]
Phosphate..µmol.L.<-data_for_pca[10]
Silicate..µmol.L.<-data_for_pca[11]
Nitrite.and.Nitrate..µmol.L.<-data_for_pca[12]
Primary.Prod...mg.m.day.<-data_for_pca[13]
Prim.Prod.STD..mg.m.day.<-data_for_pca[14]
Archaeplastida.Chlorophyta.and.otherArchaeplastida<- Archaeplastida.Chlorophyta.and.otherArchaeplastida()
Excavata.Discoba.Jakobida<- Excavata.Discoba.Jakobida()
Picozoa.Picomonadida<-Picozoa.Picomonadida()
Stramenopiles.MAST_2.and.MAST_3<-Stramenopiles.MAST_2.and.MAST_3()
Eukaryota_other<-Eukaryota_other()
Cryptophyceae.Geminigera.and.otherCryptophyceae<-Cryptophyceae.Geminigera.and.otherCryptophyceae()
Haptophyta.Phaeocystis.and.non_Phaeocystis<-Haptophyta.Phaeocystis.and.non_Phaeocystis()
Alveolata.Dinoflagellata<-Alveolata.Dinoflagellata()
Rhizaria.Cercozoa<-Rhizaria.Cercozoa()
Stramenopiles.Diatomea.all<-Stramenopiles.Diatomea.all()
Stramenopiles.Dictyochophyceae.all<-Stramenopiles.Dictyochophyceae.all()
SAR_unclassified.and.otherStramenopiles.and.otherAlveolata.and.Ochrophyta.and.Phaeophyceae<-SAR_unclassified.and.otherStramenopiles.and.otherAlveolata.and.Ochrophyta.and.Phaeophyceae()
# Changing the temp to kelvin because it cant have negative numbers
data_for_pca$Temperature...C.<-data_for_pca$Temperature...C.+273.15
names(data_for_pca)[1] <- "Temperature...K."
Group_1<- do.call("cbind", list(data_for_pca, Archaeplastida.Chlorophyta.and.otherArchaeplastida, Stramenopiles.Dictyochophyceae.all))
Group_2<- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Eukaryota_other, Cryptophyceae.Geminigera.and.otherCryptophyceae, Stramenopiles.Diatomea.all))
Group_3<- do.call("cbind", list(data_for_pca, Rhizaria.Cercozoa))
Group_4<- do.call("cbind", list(data_for_pca, Picozoa.Picomonadida))
Date<-data.frame(
Date= c("2012-11-27","2013-02-08","2013-12-27","2014-01-23","2014-02-03","2014-02-10","2014-02-28","2014-03-04","2014-12-01","2014-12-11","2015-01-12","2015-01-19","2015-02-09","2015-02-23","2015-03-09"))
# Large_corl_NMDS<-Large_corl
# # converting temperature to k because i got a warring about negative numbers
# Large_corl_NMDS$Temperature...C.<-Large_corl_NMDS$Temperature...C.+273.15
# names(Large_corl_NMDS)[1] <- "Temperature...K."
set.seed(1)
# running the nmds calculations using default setting
# NMDS <- metaMDS(Large_corl_NMDS, distance= "bray", k=2)
NMDS_Group_1 <- metaMDS(Group_1, distance= "bray", k=2)
NMDS_Group_2 <- metaMDS(Group_2, distance= "bray", k=2)
NMDS_Group_3 <- metaMDS(Group_3, distance= "bray", k=2)
NMDS_Group_4 <- metaMDS(Group_4, distance= "bray", k=2)
# running a shepherd plot. im not sure exactly but im pretty sure the results are good
stressplot(NMDS_Group_1)
stressplot(NMDS_Group_2)
stressplot(NMDS_Group_3)
stressplot(NMDS_Group_4)
plot(NMDS_Group_1, "sites")
NMDS_Group_1_fit <- envfit(NMDS_Group_1, Group_1, permu=999)
plot(NMDS_Group_1_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 1 NMDS"))
plot(NMDS_Group_2, "sites")
NMDS_Group_2_fit <- envfit(NMDS_Group_2, Group_2, permu=999)
plot(NMDS_Group_2_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 1 NMDS"))
plot(NMDS_Group_3, "sites")
NMDS_Group_3_fit <- envfit(NMDS_Group_3, Group_3, permu=999)
plot(NMDS_Group_3_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 1 NMDS"))
plot(NMDS_Group_4, "sites")
NMDS_Group_4_fit <- envfit(NMDS_Group_4, Group_4, permu=999)
plot(NMDS_Group_4_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 1 NMDS"))
plot(NMDS_Group_1, shape=1)
plot(NMDS_Group_2, shape=1)
plot(NMDS_Group_1, shape=1)
NMDS_Group_1$points
Large.hel<- decostand(Group_1, method = "hellinger")
Large.hel<- subset(Large.hel, select = -c(`Fluorescence..mg.m³.`,`Phaeopigment..mg.m³.`))
nmds1<-metaMDS(Large.hel, try=50, autotransform = F)
ordiplot(nmds1, type = "t", cex=2)
autoplot(nmds1)
fort<-fortify(nmds1)
ggplot()+
geom_point(data=subset(fort,Score=="sites"),
mapping = aes(x=NMDS1, y=NMDS2),
colour="black",
alpha=0.5)
# geom_segment()
fort<-fortify(nmds1)
ggplot()+
geom_point(data=subset(fort,Score=="sites"),
mapping = aes(x=NMDS1, y=NMDS2),
colour=Date$Date,
size=5)+
geom_text(data=subset(fort, Score=="species"),
mapping = aes(label=Label, x=NMDS1, y=NMDS2),
alpha=0)
# scale_color_discrete("Date")
ordiplot(nmds1, type = "t", cex = 1)
plot(NMDS_Group_1, "sites")
NMDS_Group_1_fit <- envfit(NMDS_Group_1, Group_1, permu=999)
plot(NMDS_Group_1_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 1 NMDS"))
plot(NMDS_Group_2, "sites")
NMDS_Group_2_fit <- envfit(NMDS_Group_2, Group_2, permu=999)
plot(NMDS_Group_2_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 2 NMDS"))
plot(NMDS_Group_3, "sites")
NMDS_Group_3_fit <- envfit(NMDS_Group_3, Group_3, permu=999)
plot(NMDS_Group_3_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 3 NMDS"))
plot(NMDS_Group_4, "sites")
NMDS_Group_4_fit <- envfit(NMDS_Group_4, Group_4, permu=999)
plot(NMDS_Group_4_fit, cex =1.5, main = title(main = "Maximum Consolidatoin Group 4 NMDS"))
Group_2 <- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Haptophyta.non_Phaeocystis, Eukaryota_other))
Group_2 <- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Haptophyta.non_Phaeocystis, Eukaryota_other))
Group_2 <- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Haptophyta.non_Phaeocystis, Eukaryota_other))
Group_2 <- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Haptophyta.non_Phaeocystis, Eukaryota_other))
knitr::opts_chunk$set(echo = TRUE)
library(xlsx)
library(ggplot2)
library(ggfortify)
library(tidyverse)
library(dplyr)
library(GGally)
library(corrgram)
library(janitor)
library(reshape2)
library(vegan)
source("..//..//Functions//My_Functions.R")
source("..//..//Functions//minimum_consolidation_functions//data_for_pca_formating_updatedSept2022_no_percentage_minimum_consolidation.R")
source("..//..//Functions//minimum_consolidation_functions//metagenome_taxa_removed_updatedSept2022_no_percentage_minimum_consolidation.R")
source("..//..//Functions//minimum_consolidation_functions//Taxa_DF_updatedSept2022_no_percentage_minimum_consolidation.R")
data_for_pca<-data_for_pca()
CTD_crop<-CTD_crop()
Metagenome_average_counts <-metagenome_taxa_removed()
# Removing the metagenome data base in favor for 18s so that cbind can combine the two so that I can do correlations
# Metagenome_average_counts <- subset (Metagenome_average_counts, select = -c(2,7))
# Pretty sure I dont need this
# saving the Metagenome_average_counts
# write.csv(Metagenome_average_counts, "Metagenome_average_counts_updatedSept2022_no_percentage_minimum_consolidation.csv")
# Pretty sure I dont need this
# # Using an external xlsx file i made of percentages of taxa instead of counts
# Metagenome_percent_counts <- read.xlsx("Metagenome_percent_counts.xlsx", sheetIndex=1, header= TRUE)
#
# Metagenome_average_counts_intermidiary<- Metagenome_average_counts
#
# Metagenome_average_counts_intermidiary[1:27,2:20]<-Metagenome_percent_counts[1:27,3:20]
#
# Metagenome_percent_counts<-Metagenome_average_counts_intermidiary
# WILL NEED TO EDIT
# Alveolata.Dinoflagellata<-Alveolata.Dinoflagellata()
# Alveolata.otherAlveolata<- Alveolata.otherAlveolata()
# Archaeplastida.Chlorophyta<- Archaeplastida.Chlorophyta()
# Archaeplastida.otherArchaeplastida<- Archaeplastida.otherArchaeplastida()
# Cryptophyceae.Cryptomonadales.Geminigera<- Cryptophyceae.Cryptomonadales.Geminigera()
# Cryptophyceae.otherCryptophyceae<- Cryptophyceae.otherCryptophyceae()
# Excavata.Discoba.Jakobida<- Excavata.Discoba.Jakobida()
# Haptophyta.Phaeocystis<- Haptophyta.Phaeocystis()
# Picozoa.otherPicozoa<- Picozoa.otherPicozoa()
# Rhizaria.Cercozoa<- Rhizaria.Cercozoa()
# Rhizaria.otherRhizaria<- Rhizaria.otherRhizaria()
# SAR_unclassified<- SAR_unclassified()
# Stramenopiles.Diatomea.Bacillariophytina<- Stramenopiles.Diatomea.Bacillariophytina()
# Stramenopiles.Diatomea.Coscinodiscophytina<- Stramenopiles.Diatomea.Coscinodiscophytina()
# Stramenopiles.Diatomea.otherDiatomea<- Stramenopiles.Diatomea.otherDiatomea()
# Stramenopiles.Dictyochophyceae.Dictyochales<- Stramenopiles.Dictyochophyceae.Dictyochales()
# Stramenopiles.Dictyochophyceae.Florenciellales<- Stramenopiles.Dictyochophyceae.Florenciellales()
# Stramenopiles.Dictyochophyceae.otherDictyochophyceae<- Stramenopiles.Dictyochophyceae.otherDictyochophyceae()
# Stramenopiles.Dictyochophyceae.Pedinellales<- Stramenopiles.Dictyochophyceae.Pedinellales()
# Stramenopiles.Ochrophyta.other<- Stramenopiles.Ochrophyta.other()
# Stramenopiles.otherStramenopiles<- Stramenopiles.otherStramenopiles()
# Stramenopiles.Phaeophyceae<- Stramenopiles.Phaeophyceae()
# Stramenopiles.Diatomea.ME_Euk_FW10<- Stramenopiles.Diatomea.ME_Euk_FW10()
# Stramenopiles.MAST_2<- Stramenopiles.MAST_2()
# Stramenopiles.MAST_3<- Stramenopiles.MAST_3()
# Picozoa.Picomonadida<-Picozoa.Picomonadida()
Alveolata.Dinoflagellata<-Alveolata.Dinoflagellata()
Alveolata.otherAlveolata<- Alveolata.otherAlveolata()
Archaeplastida.Chlorophyta.and.otherArchaeplastida<- Archaeplastida.Chlorophyta.and.otherArchaeplastida()
Cryptophyceae.Cryptomonadales.Geminigera<- Cryptophyceae.Cryptomonadales.Geminigera()
Cryptophyceae.otherCryptophyceae<- Cryptophyceae.otherCryptophyceae()
Excavata.Discoba.Jakobida<- Excavata.Discoba.Jakobida()
Haptophyta.non_Phaeocystis<-Haptophyta.non_Phaeocystis()
Haptophyta.Phaeocystis<-Haptophyta.Phaeocystis()
Picozoa.Picomonadida<-Picozoa.Picomonadida()
Rhizaria.Cercozoa<- Rhizaria.Cercozoa()
Stramenopiles.Diatomea.Bacillariophytina<- Stramenopiles.Diatomea.Bacillariophytina()
Stramenopiles.Diatomea.Coscinodiscophytina<- Stramenopiles.Diatomea.Coscinodiscophytina()
Stramenopiles.Diatomea.ME_Euk_FW10<-Stramenopiles.Diatomea.ME_Euk_FW10()
Stramenopiles.Diatomea.otherDiatomea<-Stramenopiles.Diatomea.otherDiatomea()
Stramenopiles.Dictyochophyceae.Dictyochales.and.Florenciellales.and.otherDictyochophyceae<-Stramenopiles.Dictyochophyceae.Dictyochales.and.Florenciellales.and.otherDictyochophyceae()
Stramenopiles.Dictyochophyceae.Pedinellales<-Stramenopiles.Dictyochophyceae.Pedinellales()
Stramenopiles.MAST_2.and.MAST_3<-Stramenopiles.MAST_2.and.MAST_3()
Stramenopiles.Ochrophyta.other<-Stramenopiles.Ochrophyta.other()
Stramenopiles.otherStramenopiles<-Stramenopiles.otherStramenopiles()
Stramenopiles.Phaeophyceae<-Stramenopiles.Phaeophyceae()
SAR_unclassified<-SAR_unclassified()
Eukaryota_other<-Eukaryota_other()
# I'm pretty sure this was to remove metagenome database and I dont need that any more because its already removed
# WILL NEED TO EDIT
# Alveolata.Dinoflagellata<-data.frame(Alveolata.Dinoflagellata=Alveolata.Dinoflagellata[-c(2,7),])
# Alveolata.otherAlveolata<-data.frame(Alveolata.otherAlveolata=Alveolata.otherAlveolata[-c(2,7),])
# Archaeplastida.Chlorophyta<-data.frame(Archaeplastida.Chlorophyta=Archaeplastida.Chlorophyta[-c(2,7),])
# Archaeplastida.otherArchaeplastida<-data.frame(Archaeplastida.otherArchaeplastida=Archaeplastida.otherArchaeplastida[-c(2,7),])
# Cryptophyceae.Cryptomonadales.Geminigera<-data.frame(Cryptophyceae.Cryptomonadales.Geminigera=Cryptophyceae.Cryptomonadales.Geminigera[-c(2,7),])
# Cryptophyceae.otherCryptophyceae<-data.frame(Cryptophyceae.otherCryptophyceae=Cryptophyceae.otherCryptophyceae[-c(2,7),])
# Excavata.Discoba.Jakobida<-data.frame(Excavata.Discoba.Jakobida=Excavata.Discoba.Jakobida[-c(2,7),])
# Haptophyta.Phaeocystis<-data.frame(Haptophyta.Phaeocystis=Haptophyta.Phaeocystis[-c(2,7),])
# Picozoa.otherPicozoa<-data.frame(Picozoa.otherPicozoa=Picozoa.otherPicozoa[-c(2,7),])
# Rhizaria.Cercozoa<-data.frame(Rhizaria.Cercozoa=Rhizaria.Cercozoa[-c(2,7),])
# Rhizaria.otherRhizaria<-data.frame(Rhizaria.otherRhizaria=Rhizaria.otherRhizaria[-c(2,7),])
# SAR_unclassified<-data.frame(SAR_unclassified=SAR_unclassified[-c(2,7),])
# Stramenopiles.Diatomea.Bacillariophytina<-data.frame(Stramenopiles.Diatomea.Bacillariophytina=Stramenopiles.Diatomea.Bacillariophytina[-c(2,7),])
# Stramenopiles.Diatomea.Coscinodiscophytina<-data.frame(Stramenopiles.Diatomea.Coscinodiscophytina=Stramenopiles.Diatomea.Coscinodiscophytina[-c(2,7),])
# Stramenopiles.Diatomea.otherDiatomea<-data.frame(Stramenopiles.Diatomea.otherDiatomea=Stramenopiles.Diatomea.otherDiatomea[-c(2,7),])
# Stramenopiles.Dictyochophyceae.Dictyochales<-data.frame(Stramenopiles.Dictyochophyceae.Dictyochales=Stramenopiles.Dictyochophyceae.Dictyochales[-c(2,7),])
# Stramenopiles.Dictyochophyceae.Florenciellales<-data.frame(Stramenopiles.Dictyochophyceae.Florenciellales=Stramenopiles.Dictyochophyceae.Florenciellales[-c(2,7),])
# Stramenopiles.Dictyochophyceae.otherDictyochophyceae<-data.frame(Stramenopiles.Dictyochophyceae.otherDictyochophyceae=Stramenopiles.Dictyochophyceae.otherDictyochophyceae[-c(2,7),])
# Stramenopiles.Dictyochophyceae.Pedinellales<-data.frame(Stramenopiles.Dictyochophyceae.Pedinellales=Stramenopiles.Dictyochophyceae.Pedinellales[-c(2,7),])
# Stramenopiles.Ochrophyta.other<-data.frame(Stramenopiles.Ochrophyta.other=Stramenopiles.Ochrophyta.other[-c(2,7),])
# Stramenopiles.otherStramenopiles<-data.frame(Stramenopiles.otherStramenopiles=Stramenopiles.otherStramenopiles[-c(2,7),])
# Stramenopiles.Phaeophyceae<-data.frame(Stramenopiles.Phaeophyceae=Stramenopiles.Phaeophyceae[-c(2,7),])
# Stramenopiles.Diatomea.ME_Euk_FW10<-data.frame(Stramenopiles.Diatomea.ME_Euk_FW10=Stramenopiles.Diatomea.ME_Euk_FW10[-c(2,7),])
# Stramenopiles.MAST_2<-data.frame(Stramenopiles.MAST_2=Stramenopiles.MAST_2[-c(2,7),])
# Stramenopiles.MAST_3<-data.frame(Stramenopiles.MAST_3=Stramenopiles.MAST_3[-c(2,7),])
# Picozoa.Picomonadida<-data.frame(Picozoa.Picomonadida=Picozoa.Picomonadida[-c(2,7),])
#
# WILL NEED TO EDIT
Big_PCA <- do.call("cbind", list(data_for_pca,
Alveolata.Dinoflagellata,
Alveolata.otherAlveolata,
Archaeplastida.Chlorophyta.and.otherArchaeplastida,
Cryptophyceae.Cryptomonadales.Geminigera,
Cryptophyceae.otherCryptophyceae,
Excavata.Discoba.Jakobida,
Haptophyta.non_Phaeocystis,
Haptophyta.Phaeocystis,
Picozoa.Picomonadida,
Rhizaria.Cercozoa,
Stramenopiles.Diatomea.Bacillariophytina,
Stramenopiles.Diatomea.Coscinodiscophytina,
Stramenopiles.Diatomea.ME_Euk_FW10,
Stramenopiles.Diatomea.otherDiatomea,
Stramenopiles.Dictyochophyceae.Dictyochales.and.Florenciellales.and.otherDictyochophyceae,
Stramenopiles.Dictyochophyceae.Pedinellales,
Stramenopiles.MAST_2.and.MAST_3,
Stramenopiles.Ochrophyta.other,
Stramenopiles.otherStramenopiles,
Stramenopiles.Phaeophyceae,
SAR_unclassified,
Eukaryota_other
))
# corrgram(Archaeplastida.Chlorophyta_PCA, order=TRUE, lower.panel=panel.shade, upper.panel=panel.cor, text.panel=panel.txt)
ggcorr(Big_PCA)+
ggtitle("Minimum Cosolidation Correlation Plot")
Big_PCA_res <- prcomp(Big_PCA, scale. = TRUE)
autoplot(Big_PCA_res, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=4)+
ggtitle("Minimum Cosolidation PCA Plot")
# Making Big_PCA into a matrix
Big_PCA_corl <- round(cor(Big_PCA),2)
# Filtering out Big_PCA to only include greater then or lesser then values
Big_PCA_corl_filterd <- Big_PCA_corl
x<- 0.65
Big_PCA_corl_filterd[Big_PCA_corl_filterd < x & Big_PCA_corl_filterd > -x] <- ""
# Saving Big_PCA-Corl_filter as an excel file
# write.csv(Big_PCA_corl_filterd, "..//..//Generated_Tables//Big_PCA_corl_filterd_updatedSept2022_no_percentage_minimum_consolidation.csv")
Temperature...C. <-data_for_pca[1]
Conductivity..S.m.<-data_for_pca[2]
Pressure..dbar.<-data_for_pca[3]
Fluorescence..mg.m.<-data_for_pca[4]
Salinity<-data_for_pca[5]
Depth..m.<-data_for_pca[6]
Density..kg.m.<-data_for_pca[7]
Chlorophyll..mg.m.<-data_for_pca[8]
Phaeopigment..mg.m.<-data_for_pca[9]
Phosphate..µmol.L.<-data_for_pca[10]
Silicate..µmol.L.<-data_for_pca[11]
Nitrite.and.Nitrate..µmol.L.<-data_for_pca[12]
Primary.Prod...mg.m.day.<-data_for_pca[13]
Prim.Prod.STD..mg.m.day.<-data_for_pca[14]
# I WILL NEED TO REMAKE THIS WITH THE COROLATIONS I END UP CHOOSING
# WILL CHANGE
Large_corl <- do.call("cbind", list(Temperature...C.,Conductivity..S.m., Salinity,"Density..kg.m³.", "Primary.Prod...mg.m³.day.", Cryptophyceae.Cryptomonadales.Geminigera))
Group_1 <- do.call("cbind", list(data_for_pca, Archaeplastida.Chlorophyta.and.otherArchaeplastida, Rhizaria.Cercozoa, Stramenopiles.Diatomea.ME_Euk_FW10, Stramenopiles.Dictyochophyceae.Pedinellales))
Group_1_PCA <- prcomp(Group_1, scale. = TRUE)
autoplot(Group_1_PCA, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=6)+
ggtitle("Minimum Group 1 PCA Plot")
Group_2 <- do.call("cbind", list(data_for_pca, Excavata.Discoba.Jakobida, Haptophyta.non_Phaeocystis, Eukaryota_other))
Group_2_PCA <- prcomp(Group_1, scale. = TRUE)
autoplot(Group_2_PCA, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=6)+
ggtitle("Minimum Group 2 PCA Plot")
Group_3 <- do.call("cbind", list(data_for_pca, Cryptophyceae.Cryptomonadales.Geminigera, Picozoa.Picomonadida, Stramenopiles.otherStramenopiles))
Group_3_PCA <- prcomp(Group_3, scale. = TRUE)
autoplot(Group_3_PCA, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=6)+
ggtitle("Minimum Group 3 PCA Plot")
Group_4 <- do.call("cbind", list(data_for_pca, Cryptophyceae.otherCryptophyceae, Stramenopiles.Dictyochophyceae.Dictyochales.and.Florenciellales.and.otherDictyochophyceae, Stramenopiles.MAST_2.and.MAST_3))
Group_4_PCA <- prcomp(Group_4, scale. = TRUE)
autoplot(Group_4_PCA, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=6)+
ggtitle("Minimum Group 4 PCA Plot")
Group_2_PCA <- prcomp(Group_2, scale. = TRUE)
autoplot(Group_2_PCA, data = CTD_crop, colour = 'Date', shape = "Summer_Stage", loadings=TRUE, loadings.label=TRUE, loadings.label.size=6)+
ggtitle("Minimum Group 2 PCA Plot")
library(BSgenome)
library(BSgenome.Hsapiens.UCSC.hg18)
Seq.21 = Hsapiens[["chr21"]]
Seq.22 = Hsapiens[["chr22"]]
# show some summaries
length(Seq.21)
# count how often individual bases appear
bases=alphabetFrequency(Seq.21, as.prob=TRUE)
bases[1:4]
GCcontent=bases["C"]+bases["G"]
GCcontent
number.cg=countPattern("CG", Seq.21)
bases=alphabetFrequency(Seq.21)
freq.cg = number.cg/(sum(bases)-1)
freq.cg
Seq.21 = Hsapiens[["chr21"]]
Seq.22 = Hsapiens[["chr22"]]
# show some summaries
length(Seq.21)
# count how often individual bases appear
bases=alphabetFrequency(Seq.21, as.prob=TRUE)
bases[1:4]
GCcontent=bases["C"]+bases["G"]
GCcontent
number.cg=countPattern("CG", Seq.21)
bases=alphabetFrequency(Seq.21)
freq.cg = number.cg/(sum(bases)-1)
freq.cg
View(Seq.21)
print(Seq.21)
?Hsapiens
print(Seq.22)
length(Seq.22)
# count how often individual bases appear
bases=alphabetFrequency(Seq.22, as.prob=TRUE)
bases[1:4]
GCcontent=bases["C"]+bases["G"]
GCcontent
number.cg=countPattern("CG", Seq.22)
bases=alphabetFrequency(Seq.22)
freq.cg = number.cg/(sum(bases)-1)
freq.cg
Seq.21 = Hsapiens[["chr21"]]
Seq.22 = Hsapiens[["chr22"]]
# show some summaries
length(Seq.21)
# count how often individual bases appear
bases=alphabetFrequency(Seq.21, as.prob=TRUE)
bases[1:4]
GCcontent=bases["C"]+bases["G"]
GCcontent
number.cg=countPattern("CG", Seq.21)
bases=alphabetFrequency(Seq.21)
freq.cg = number.cg/(sum(bases)-1)
freq.cg
genes = read.table("hg18genes_chrom21.txt", comment = "", header = TRUE)
## some genes are listed more than once - there may be alternate versions of the gene or alternate splicings. Removing duplicates with the same transcription start or end site.
genes = genes[!duplicated(genes$txStart),]
genes = genes[!duplicated(genes$txEnd),]
tss=genes$txStart
idx=genes$strand=="-"
tss[idx]=genes$txEnd[idx]
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
BiocManager::install(c("GenomicFeatures", "BSgenome"))
a
genes = read.table("hg18genes_chrom21.txt", comment = "", header = TRUE)
## some genes are listed more than once - there may be alternate versions of the gene or alternate splicings. Removing duplicates with the same transcription start or end site.
genes = genes[!duplicated(genes$txStart),]
genes = genes[!duplicated(genes$txEnd),]
tss=genes$txStart
idx=genes$strand=="-"
tss[idx]=genes$txEnd[idx]
## Define a CpG Island as +/- 500 bp from start of transcription start site (tss) position.
library(GenomicFeatures)
CpG.Island=GRanges(seqnames=Rle(genes$name), ranges=IRanges(tss-500,tss+500), strand = Rle(genes$strand))
head(CpG.Island)
## Obtaining the DNA sequences from chromosome 21 within +/- 500bp of transcription start sites.
## Unmasking the sequence means to remove restrictions on the DNAString object - don't worry about it.
Seq.21 = unmasked(Seq.21)
CpG.Island.Seq=DNAStringSet(Seq.21, start=start(CpG.Island), end=end(CpG.Island))
library(HMM)
CG=vcountPattern("CG", CpG.Island.Seq)
head(CG)
sum(CG)
CC=vcountPattern("CC", CpG.Island.Seq)
CA=vcountPattern("CA", CpG.Island.Seq)
CT=vcountPattern("CT", CpG.Island.Seq)
AA=vcountPattern("AA", CpG.Island.Seq)
AT=vcountPattern("AT", CpG.Island.Seq)
AC=vcountPattern("AC", CpG.Island.Seq)
AG=vcountPattern("AG", CpG.Island.Seq)
TA=vcountPattern("TA", CpG.Island.Seq)
TT=vcountPattern("TT", CpG.Island.Seq)
TC=vcountPattern("TC", CpG.Island.Seq)
TG=vcountPattern("TG", CpG.Island.Seq)
GA=vcountPattern("GA", CpG.Island.Seq)
GT=vcountPattern("GT", CpG.Island.Seq)
GC=vcountPattern("GC", CpG.Island.Seq)
GG=vcountPattern("GG", CpG.Island.Seq)
Total.C = sum(sum(CG), sum(CC), sum(CA), sum(CT))
Total.A = sum(sum(AA), sum(AT), sum(AC), sum(AG))
Total.T = sum(sum(TA), sum(TT), sum(TC), sum(TG))
Total.G = sum(sum(GA), sum(GT), sum(GC), sum(GG))
P <- matrix(nrow=4, ncol=4, dimnames=list(c("A","T","C","G"),c("A","T", "C", "G")))
P[1,1] <- sum(AA)/Total.A
P[1,2] <- sum(AT)/Total.A
P[1,3] <- sum(AC)/Total.A
P[1,4] <- sum(AG)/Total.A
P[2,1] <- sum(TA)/Total.T
P[2,2] <- sum(TT)/Total.T
P[2,3] <- sum(TC)/Total.T
P[2,4] <- sum(TG)/Total.T
P[3,1] <- sum(CA)/Total.C
P[3,2] <- sum(CT)/Total.C
P[3,3] <- sum(CC)/Total.C
P[3,4] <- sum(CG)/Total.C
P[4,1] <- sum(GA)/Total.G
P[4,2] <- sum(GT)/Total.G
P[4,3] <- sum(GC)/Total.G
P[4,4] <- sum(GG)/Total.G
P
sum(P)
## Change your working directory to the folder where you have saved the file "hg18genes_chrom21.txt"
## Transcriptional start sites are noted in the column txStart
## Note that txEnd value is the start site for genes on "-" strand of DNA
genes = read.table("hg18genes_chrom21.txt", comment = "", header = TRUE)
## some genes are listed more than once - there may be alternate versions of the gene or alternate splicings. Removing duplicates with the same transcription start or end site.
genes = genes[!duplicated(genes$txStart),]
genes = genes[!duplicated(genes$txEnd),]
tss=genes$txStart
idx=genes$strand=="-"
tss[idx]=genes$txEnd[idx]
## Define a CpG Island as +/- 500 bp from start of transcription start site (tss) position.
library(GenomicFeatures)
CpG.Island=GRanges(seqnames=Rle(genes$name), ranges=IRanges(tss-500,tss+500), strand = Rle(genes$strand))
head(CpG.Island)
## Obtaining the DNA sequences from chromosome 21 within +/- 500bp of transcription start sites.
## Unmasking the sequence means to remove restrictions on the DNAString object - don't worry about it.
Seq.21 = unmasked(Seq.21)
CpG.Island.Seq=DNAStringSet(Seq.21, start=start(CpG.Island), end=end(CpG.Island))
#############################
left = tss-500
right = tss+500
left.new <- c(1,right)
right.new <- c(left, length(Seq.21))
# checking whether there is overlap between CpG Islands
left.new < right.new
idx <- (left.new < right.new)
# remove negative widths and get sequence
Not.CpG.Island.Seq=DNAStringSet(Seq.21, start=left.new[idx], end=right.new[idx])
genes = read.table("hg18genes_chrom21.txt", comment = "", header = TRUE)
genes = read.table("hg18genes_chrom21.txt", comment = "", header = TRUE)
if (!requireNamespace("BiocManager", quietly = TRUE))
install.packages("BiocManager")
BiocManager::install(version = "3.15")
R.version()
R.Version()
updateR()
# installing/loading the package:
if(!require(installr)) {
install.packages("installr");
require(installr)
} #load / install+load installr
updateR()
library(xlsx)
library(ggplot2)
library(xlsx)
library(ggplot2)
